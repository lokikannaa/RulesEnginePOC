[
  {
    "WorkflowName": "EntitlementWorkflow",
    "WorkflowsToInject": null,
    "RuleExpressionType": 0,
    "GlobalParams": null,
    "Rules": [
      {
        "RuleName": "ToyotaVehicles",
        "Properties": null,
        "Operator": null,
        "ErrorMessage": null,
        "Enabled": true,
        "RuleExpressionType": 0,
        "WorkflowsToInject": null,
        "Rules": [],
        "LocalParams": null,
        "Expression": " input1.VehicleId == 101 Or input1.VehicleId == 104 ",
        "Actions": null,
        "SuccessEvent": "true"
      },
      {
        "RuleName": "OEMPartType",
        "Properties": null,
        "Operator": null,
        "ErrorMessage": null,
        "Enabled": true,
        "RuleExpressionType": 0,
        "WorkflowsToInject": null,
        "Rules": [],
        "LocalParams": null,
        "Expression": "true == true",
        "Actions": {
          "OnSuccess": {
            "Name": "PartTypeAction",
            "Context": {
              "OEM": "true",
              "Aftermarket": "false",
              "entitlementId": 3
            }
          },
          "OnFailure": null
        },
        "SuccessEvent": "true"
      },
      {
        "RuleName": "Parts Silo",
        "Properties": null,
        "Operator": null,
        "ErrorMessage": null,
        "Enabled": true,
        "RuleExpressionType": 0,
        "WorkflowsToInject": null,
        "Rules": [],
        "LocalParams": null,
        "Expression": " Utils.AreListsEqual(input1.ContentSiloIds, \"1,2\") == true And input1.VehicleYear > 2010 And input1.VehicleYear < 2020 And Utils.CheckContains(input1.VehicleMake, \"Toyota,Ford\") == true And Utils.CheckContains(input1.TaxonomyId, \"1,2\") == true ",
        "Actions": {
          "OnSuccess": {
            "Name": "PartsAction",
            "Context": {
              "TaxonomyIds": [
                1,
                2
              ],
              "VehicleMakes": [
                "Acura",
                "Ford"
              ],
              "entitlementId": 2,
              "ContentSiloIds": [
                1,
                2
              ]
            }
          },
          "OnFailure": {
            "Name": "PartsAction",
            "Context": {
              "TaxonomyIds": [
                1,
                2
              ],
              "VehicleMakes": [
                "Acura",
                "Ford"
              ],
              "entitlementId": 2,
              "ContentSiloIds": [
                1,
                2
              ]
            }
          }
        },
        "SuccessEvent": "true"
      }
    ]
  },
  {
    "WorkflowName": "NestedInputDemoWorkflow1",
    "Rules": [
      {
        "RuleName": "CheckNestedSimpleProp",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input1.NestedProp.SimpleProp == \"nestedSimpleProp\""
      }
    ]
  },
  {
    "WorkflowName": "NestedInputDemoWorkflow2",
    "Rules": [
      {
        "RuleName": "CheckNestedListProp",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input1.NestedProp.ListProp[0].Id == 1 && input1.NestedProp.ListProp[1].Value == \"second\""
      }
    ]
  },

  {
    "WorkflowName": "NestedInputDemoWorkflow3",
    "Rules": [
      {
        "RuleName": "CheckNestedListPropFunctions",
        "ErrorMessage": "One or more adjust rules failed.",
        "ErrorType": "Error",
        "RuleExpressionType": "LambdaExpression",
        "Expression": "input1.NestedProp.ListProp[1].Value.ToUpper() = \"SECOND\""
      }
    ]
  }
]